<?php/*  Custom post - Management Team */function cmt_team_manager() {  $labels = array(    'name'               => __( 'Management Team', 'cmt-management-team' ),    'singular_name'      => __( 'Management Team', 'cmt-management-team' ),    'add_new'            => __( 'Add New Member', 'member' ),    'add_new_item'       => __( 'Add New Member' ),    'edit_item'          => __( 'Edit Member' ),    'new_item'           => __( 'New Member' ),    'all_items'          => __( 'All Members' ),    'view_item'          => __( 'View Member' ),    'search_items'       => __( 'Search Members' ),    'not_found'          => __( 'No Member found' ),    'not_found_in_trash' => __( 'No Member found in the Trash' ),     'parent_item_colon'  => __( '' ),    'menu_name'          => __( 'Management Team' )  );	  $profile_slug = get_option('cmt_mem_pro_page_slug');  $args = array(    'labels'        => $labels,    'description'   => 'Team Members Add',    'public'        => true,	'rewrite'       => array( 'slug' => $profile_slug ),	'menu_position' => null,    'supports'      => array( 'title', 'editor', 'thumbnail', 'excerpt' ),    'has_archive'   => true  );  register_post_type( 'cmt-management-team', $args );     register_taxonomy(                "cmt-team-category", "cmt-management-team", array(                "hierarchical"   => true,                "label"          => "Member Categories",                "singular_label" => "Member Categories",                 "rewrite"        => true));        register_taxonomy_for_object_type('cmt-team-category', 'cmt-management-team');             flush_rewrite_rules();}add_action( 'init', 'cmt_team_manager' );// add setting menu optionadd_action('admin_menu', 'register_cmt_options_page');function register_cmt_options_page() {	$menu_page = add_submenu_page( 'edit.php?post_type=cmt-management-team', 'CMT Settings', 'Settings', 'manage_options', 'cmt-settings-page', 'cmt_settings_page_callback' ); 		//call register settings function	add_action( 'admin_init', 'register_cmtsettings' );}function register_cmtsettings() {	//register our settings	register_setting( 'cmt-settings-group', 'cmt_mem_per_page' );	register_setting( 'cmt-settings-group', 'cmt_ajax_load' );	register_setting( 'cmt-settings-group', 'cmt_custom_css' );	register_setting( 'cmt-settings-group', 'cmt_single_page' );	register_setting( 'cmt-settings-group', 'cmt_profile_page' );	register_setting( 'cmt-settings-group', 'cmt_show_gridview' );	register_setting( 'cmt-settings-group', 'cmt_mem_pro_page_slug' );}function cmt_settings_page_callback($hook) { ?>			<div class="wrap">		<h2>CMT Settings Page</h2>		<?php //	global $menu_page;//	if( $hook == $menu_page ) { ?>		<div class="welcome">						<div class="cmt-links"><p><strong>If you enjoy using Custom Team Manager and find it useful, please consider making a donation.</strong></p> <a target="_blank" class="button button-primary" href="https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=9PTQZ4R2SP7FS&lc=MY&item_name=WebSpider&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted">Donate</a> | <a target="_blank" href="https://wordpress.org/plugins/custom-team-manager/faq/">FAQ</a> - <a target="_blank" href="https://wordpress.org/support/plugin/custom-team-manager">Support</a></div>		</div>		<?php // } // end if ?>		<form method="post" action="options.php" id="cmtOptionsForm">						<?php settings_fields( 'cmt-settings-group' ); ?>			<?php do_settings_sections( 'cmt-settings-group' ); ?>			<table class="form-table">				<tr valign="top">				<th scope="row">Members Per Page:</th>				<td><input type="text" name="cmt_mem_per_page" value="<?php echo esc_attr( get_option('cmt_mem_per_page') ); ?>" /> &nbsp;&nbsp;&nbsp; </td>				<td><span class="italic">How many members you want to show per page ? <br />Default: Show all members. Leave empty to show all members or put required value eg. 12, 15.  </span></td>				</tr>								<tr valign="top">				<th scope="row">Show All Members Full <br/>Profiles on Single Page:</th>				<td class="cmt-middle">				<input class="single_page checked" name="cmt_single_page" type="radio" value="1" <?php checked( '1', get_option( 'cmt_single_page' ) ); ?> />Yes				&nbsp;&nbsp;&nbsp;				<input class="single_page" name="cmt_single_page" type="radio" value="0" <?php checked( '0', get_option( 'cmt_single_page' ) ); ?> />No &nbsp;&nbsp;&nbsp; </td>				<td><span class="italic">How you want to show members full profile ? <br />Default: Yes. Check "Yes" to show all members profile on SINGLE page. <br />"No" to show SINGLE member profile on SINGLE page.</span>				</td>				</tr>								<tr valign="top">				<th scope="row">Select Members Full Profile Page:</th>				<td class="cmt-middle">								<?php $cmt_profile_page = get_option( 'cmt_profile_page' ); ?>							<select class="select_pages" name="cmt_profile_page[page_id]" <?php disabled( get_option( 'cmt_single_page' ), 0, true ); ?>>						<option value="">Select Profile Page</option>						<?php						if( $pages = get_pages() ){							foreach( $pages as $page ){								echo '<option value="' . $page->ID . '" ' . selected( $page->ID, $cmt_profile_page['page_id'] ) . '>' . $page->post_title . '</option>';							}						}						?>					</select>				</td>				<td><span class="italic">Select in which page to show members full profile ? <br />Default: Team Members Profile <br />NOTE: Make sure, your selected page has the shortcode <code>[team-members-profile]</code></span>				</td>				</tr>								<tr valign="top">				<th scope="row">Members Progile Page Slug:</th>				<td><input class="members_slug" type="text" name="cmt_mem_pro_page_slug" value="<?php echo esc_attr( get_option('cmt_mem_pro_page_slug') ); ?>"  /> &nbsp;&nbsp;&nbsp; </td>				<td><span class="italic">Members full profile page slug? <br />Default: members. You can change full profile page slug. <br />NOTE: <code>Save Permalink if you get 404 Not Found</code></span></td>				</tr>								<tr valign="top">				<th scope="row">Use Ajax Load Pagination:</th>				<td class="cmt-middle">				<input name="cmt_ajax_load" type="radio" value="1" <?php checked( '1', get_option( 'cmt_ajax_load' ) ); ?> />Yes				&nbsp;&nbsp;&nbsp;				<input name="cmt_ajax_load" type="radio" value="0" <?php checked( '0', get_option( 'cmt_ajax_load' ) ); ?> />No &nbsp;&nbsp;&nbsp; </td>				<td><span class="italic">How you want to show more members ? <br />Default: Yes. Check "Yes" to load more members using Ajax. <br />"No" to use Traditional pagination.</span>				</td>				</tr>				<tr valign="top">				<th scope="row">Show Gridview layout:</th>				<td class="cmt-middle">				<input name="cmt_show_gridview" type="radio" value="1" <?php checked( '1', get_option( 'cmt_show_gridview' ) ); ?> />Yes				&nbsp;&nbsp;&nbsp;				<input name="cmt_show_gridview" type="radio" value="0" <?php checked( '0', get_option( 'cmt_show_gridview' ) ); ?> />No &nbsp;&nbsp;&nbsp; </td>				<td><span class="italic">How you want to show members ? <br />Default: No. Check "Yes" to show members on Gridview layout. <br />Gridview layout will remove member summary and Full Profile link text.</span>				</td>				</tr>								<tr valign="top">				<th scope="row">Custom CSS</th>				<td><textarea name="cmt_custom_css" rows="10" cols="40"><?php echo esc_attr( get_option('cmt_custom_css') );?></textarea>				</td>				<td><span class="italic">Write your CSS code to customize the design like color, fonts etc.</span>									</td>				</tr>			</table>						<p class="submit">				<input id="submit" class="button button-primary" type="submit" value="Save Changes" name="submit" />				<img src="<?php echo  plugin_dir_url(dirname(__FILE__) ).'images/ajax-loader.gif'; ?>" id="img" style="display:none" height="20" width="20" />			</p>		</form>				<div id="saveResult"></div>				<script type="text/javascript">		jQuery(document).ready(function() {		   jQuery('#cmtOptionsForm').submit(function() { 		   				 jQuery('#img').show();			  jQuery(this).ajaxSubmit({				 success: function(){					jQuery('#saveResult').html("<div id='saveMessage' class='successModal'></div>");					jQuery('#saveMessage').append("<p><?php echo htmlentities(__('Settings Saved Successfully','wp'),ENT_QUOTES); ?></p>").show();									 }, 				 timeout: 5000			  });			  setTimeout("jQuery('#img').fadeOut('slow');", 1000); 			  setTimeout("jQuery('#saveMessage').fadeOut('slow');", 5000);			  return false; 		   });		});		</script>	</div><?php	} // end function cmt_settings_page_callback//enquee ajaxfunction cmt_admin_scripts() {   if ( is_admin() ){ // for Admin Dashboard Only      // Embed the Script on our Plugin's Option Page Only      if ( isset($_GET['page']) && $_GET['page'] == 'cmt-settings-page' ) {         wp_enqueue_script('jquery');         wp_enqueue_script( 'jquery-form' );      }   }}add_action( 'admin_init', 'cmt_admin_scripts' );/* 	show recommended plugin notice *///add_action('admin_notices', 'cmt_admin_notice');function cmt_admin_notice() {	$html = '<div id="ajax-notification" class="updated">';		$html .= '<p>';			$html .= __( '<a target="_blank" href="https://wordpress.org/plugins/post-types-order/">Post Types Order</a> plugin is recommended to reorder your members. <a href="javascript:;" id="dismiss-ajax-notification"> Hide Notice</a>', 'ajax-notification' );		$html .= '</p>';		$html .= '<span id="ajax-notification-nonce" class="hidden">' . wp_create_nonce( 'ajax-notification-nonce' ) . '</span>';	$html .= '</div><!-- /.updated -->';	echo $html;}//add_action('admin_init', 'cmt_hide_notice');function cmt_hide_notice() {	// First, check the nonce to make sure it matches what we created when displaying the message.	// If not, we won't do anything.	if( wp_verify_nonce( $_REQUEST['nonce'], 'ajax-notification-nonce' ) ) {		// If the update to the option is successful, send 1 back to the browser;		// Otherwise, send 0.		if( update_option( 'hide_ajax_notification', true ) ) {			die( '1' );		} else {			die( '0' );		} // end if/else	} // end if}			/* End recommended plugin notice  */// Add meta box for Role of memberadd_action( 'add_meta_boxes', 'cmt_member_role_box' );function cmt_member_role_box() {    add_meta_box(         'cmt_member_role_box',        'Role of Member',        'cmt_member_role_box_content',        'cmt-management-team',        'normal',        'high'    );}function cmt_get_meta($meta_name, $post){	$meta_data = get_post_meta($post->ID, $meta_name, true);		if( !empty($meta_data) )		$save_meta = $meta_data;	else		$save_meta = '';		return $save_meta;}function cmt_member_role_box_content( $post ) {  echo '<label for="cmt_member_role">Role of Member</label>';  $input_value = cmt_get_meta('cmt_member_role', $post);    echo ' <input type="text" id="cmt_member_role" name="cmt_member_role" placeholder="Enter Member Role" 		value="'.$input_value.'"/>';}add_action( 'save_post', 'cmt_member_role_box_save' );function cmt_member_role_box_save( $post_id ) {  if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE )   return;  if ( 'page' == $_POST['post_type'] ) {    if ( !current_user_can( 'edit_page', $post_id ) )    return;  } else {    if ( !current_user_can( 'edit_post', $post_id ) )    return;  }  $member_role= $_POST['cmt_member_role'];  update_post_meta( $post_id, 'cmt_member_role', $member_role);}// Add meta box for facebook linkadd_action( 'add_meta_boxes', 'cmt_member_facebook_box' );function cmt_member_facebook_box() {    add_meta_box(         'cmt_member_facebook_box',        'Facebook Profile Link',        'cmt_member_facebook_box_content',        'cmt-management-team',        'normal',        'high'    );}function cmt_member_facebook_box_content( $post ) {  echo '<label for="cmt_member_facebook">Facebook Profile Link</label>';  $input_value = cmt_get_meta('cmt_member_facebook', $post);  echo '<input type="text" id="cmt_member_facebook" name="cmt_member_facebook" placeholder="eg. https://www.facebook.com/" value="'.$input_value. '"/>';}add_action( 'save_post', 'cmt_member_facebook_box_save' );function cmt_member_facebook_box_save( $post_id ) {  if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE )   return;    if ( 'page' == $_POST['post_type'] ) {    if ( !current_user_can( 'edit_page', $post_id ) )    return;  } else {    if ( !current_user_can( 'edit_post', $post_id ) )    return;  }  $member_facebook= $_POST['cmt_member_facebook'];  update_post_meta( $post_id, 'cmt_member_facebook', $member_facebook);}// Add meta box for twitter linkadd_action( 'add_meta_boxes', 'cmt_member_twitter_box' );function cmt_member_twitter_box() {    add_meta_box(         'cmt_member_twitter_box',        'Twitter Profile Link',        'cmt_member_twitter_box_content',        'cmt-management-team',        'normal',        'high'    );}function cmt_member_twitter_box_content( $post ) {  echo '<label for="cmt_member_twitter">Twitter Profile Link</label>';  $input_value = cmt_get_meta('cmt_member_twitter', $post);  echo '<input type="text" id="cmt_member_twitter" name="cmt_member_twitter" placeholder="eg. https://www.twitter.com/" value="'.$input_value. '"/>';}add_action( 'save_post', 'cmt_member_twitter_box_save' );function cmt_member_twitter_box_save( $post_id ) {  if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE )   return;    if ( 'page' == $_POST['post_type'] ) {    if ( !current_user_can( 'edit_page', $post_id ) )    return;  } else {    if ( !current_user_can( 'edit_post', $post_id ) )    return;  }  $member_twitter= $_POST['cmt_member_twitter'];  update_post_meta( $post_id, 'cmt_member_twitter', $member_twitter);}// Add meta box for linkedin of memberadd_action( 'add_meta_boxes', 'cmt_member_linkedin_box' );function cmt_member_linkedin_box() {    add_meta_box(         'cmt_member_linkedin_box',        'Linkedin Profile Link',        'cmt_member_linkedin_box_content',        'cmt-management-team',        'normal',        'high'    );}function cmt_member_linkedin_box_content( $post ) {  echo '<label for="cmt_member_linkedin">Linkedin Profile Link</label>';  $input_value = cmt_get_meta('cmt_member_linkedin', $post);  echo '<input type="text" id="cmt_member_linkedin" name="cmt_member_linkedin" placeholder="eg. https://www.linkedin.com/" value="'.$input_value. '"/>';}add_action( 'save_post', 'cmt_member_linkedin_box_save' );function cmt_member_linkedin_box_save( $post_id ) {  if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE )   return;    if ( 'page' == $_POST['post_type'] ) {    if ( !current_user_can( 'edit_page', $post_id ) )    return;  } else {    if ( !current_user_can( 'edit_post', $post_id ) )    return;  }  $member_linkedin= $_POST['cmt_member_linkedin'];  update_post_meta( $post_id, 'cmt_member_linkedin', $member_linkedin);}// Team Members Navigation.if ( ! function_exists( 'cmt_team_members_nav' ) ) {/** * Displays navigation to next/previous pages when applicable. */	function cmt_team_members_nav() {		global $wp_query;		if ( $wp_query->max_num_pages > 1 ) : ?>			<nav id="cmt-members-nav" class="cmt-members-navigation">								<div class="cmt-nav-previous"><?php previous_posts_link( __( '<span class="meta-nav">&larr;</span> Team Members Previous Page', 'webspiderbd' ) ); ?></div>				<div class="cmt-nav-next"><?php next_posts_link( __( 'Team Members Next Page <span class="meta-nav">&rarr;</span>', 'webspiderbd' ) ); ?></div>			</nav><!-- #members-nav .navigation -->		<?php endif;	}}/** * Adds custom css option content to <head> * */function cmt_add_custom_css() {	$custom_css = get_option( "cmt_custom_css" );	if ( false === $custom_css || '' == $custom_css ) return;	echo '<style type="text/css" id="cmt-custom-css">' . "\n" . $custom_css . "\n" . '</style>';}add_action( 'wp_head', 'cmt_add_custom_css', 100 );?>